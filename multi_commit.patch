From 4f077660fe30e4d5463b6900f93a5ea584f16af2 Mon Sep 17 00:00:00 2001
From: Indra-13 <indushuchi@gmail.com>
Date: Wed, 10 Jul 2024 19:53:55 +0530
Subject: [PATCH 1/3] commit1 Update componentDidMount

---
 src/Graph.tsx | 65 +++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 65 insertions(+)
 create mode 100644 src/Graph.tsx

diff --git a/src/Graph.tsx b/src/Graph.tsx
new file mode 100644
index 0000000..fea1460
--- /dev/null
+++ b/src/Graph.tsx
@@ -0,0 +1,65 @@
+import React, { Component } from 'react';
+import { Table } from '@finos/perspective';
+import { ServerRespond } from './DataStreamer';
+import { DataManipulator } from './DataManipulator';
+import './Graph.css';
+
+interface IProps {
+  data: ServerRespond[],
+}
+
+interface PerspectiveViewerElement extends HTMLElement {
+  load: (table: Table) => void,
+}
+class Graph extends Component<IProps, {}> {
+  table: Table | undefined;
+
+  render() {
+    return React.createElement('perspective-viewer');
+  }
+
+  componentDidMount() {
+    // Get element from the DOM.
+    const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
+
+    const schema = {
+      price_abc: 'float',
+      price_def: 'float',
+      ratio:'float',
+      timestamp:'date',
+      upper_bound:'float',
+      lower_bound:'float',
+      trigger_alert:'float',
+    };
+
+    if (window.perspective && window.perspective.worker()) {
+      this.table = window.perspective.worker().table(schema);
+    }
+    if (this.table) {
+      // Load the `table` in the `<perspective-viewer>` DOM reference.
+      elem.load(this.table);
+      elem.setAttribute('view', 'y_line');
+      elem.setAttribute('row-pivots', '["timestamp"]');
+      elem.setAttribute('columns', '["ratio","lower_bound","upper_bound","trigger_alert"]');
+      elem.setAttribute('aggregates', JSON.stringify({
+      price_abc: 'avg',
+      price_def: 'avg',
+      ratio:'avg',
+      timestamp:'distinct count',
+      upper_bound:'avg',
+      lower_bound:'avg',
+      trigger_alert:'avg',
+      }));
+    }
+  }
+
+  componentDidUpdate() {
+    if (this.table) {
+      this.table.update(
+        DataManipulator.generateRow(this.props.data),
+      );
+    }
+  }
+}
+
+export default Graph;
-- 
2.39.1.windows.1


From b47ba64140ecfdc787806a6e8c8d460f8d7feedb Mon Sep 17 00:00:00 2001
From: Indra-13 <indushuchi@gmail.com>
Date: Wed, 10 Jul 2024 19:58:36 +0530
Subject: [PATCH 2/3] commit2 Update componentDidUpdate

---
 src/Graph.tsx | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

diff --git a/src/Graph.tsx b/src/Graph.tsx
index fea1460..48e9b2b 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -1,5 +1,5 @@
 import React, { Component } from 'react';
-import { Table } from '@finos/perspective';
+import { Table, TableData } from '@finos/perspective';
 import { ServerRespond } from './DataStreamer';
 import { DataManipulator } from './DataManipulator';
 import './Graph.css';
@@ -55,9 +55,10 @@ class Graph extends Component<IProps, {}> {
 
   componentDidUpdate() {
     if (this.table) {
-      this.table.update(
+      this.table.update([
         DataManipulator.generateRow(this.props.data),
-      );
+      ] as unknown as TableData);
+      
     }
   }
 }
-- 
2.39.1.windows.1


From 802edcdd6485bcda7b3909aed1811dadbab8b157 Mon Sep 17 00:00:00 2001
From: Indra-13 <indushuchi@gmail.com>
Date: Wed, 10 Jul 2024 20:15:20 +0530
Subject: [PATCH 3/3] commit3 Update Row and DataManipulator

---
 src/DataManipulator.ts | 34 ++++++++++++++++++++++++++++++++++
 1 file changed, 34 insertions(+)
 create mode 100644 src/DataManipulator.ts

diff --git a/src/DataManipulator.ts b/src/DataManipulator.ts
new file mode 100644
index 0000000..1ad30e8
--- /dev/null
+++ b/src/DataManipulator.ts
@@ -0,0 +1,34 @@
+import { ServerRespond } from './DataStreamer';
+
+export interface Row {
+  price_abc: number,
+  price_def: number,
+  ratio: number,
+  timestamp: Date,
+  upper_bound: number,
+  lower_bound: number,
+  trigger_alert: number | undefined ,
+}
+
+
+export class DataManipulator {
+  static generateRow(serverRespond: ServerRespond[]): Row {
+    const priceABC = (serverRespond[0].top_ask.price + serverRespond[0].top_bid.price) / 2;
+    const priceDEF = (serverRespond[1].top_ask.price + serverRespond[1].top_bid.price) / 2;
+    const ratio = priceABC / priceDEF;
+    const upperBound = 1 + 0.05;
+    const lowerBound = 1 - 0.05;
+
+    return {
+      price_abc: priceABC,
+      price_def: priceDEF,
+      ratio,
+      timestamp:
+        serverRespond[0].timestamp > serverRespond[1].timestamp ? 
+        serverRespond[0].timestamp : serverRespond[1].timestamp,
+      upper_bound: upperBound,
+      lower_bound: lowerBound,
+      trigger_alert:ratio > upperBound || ratio < lowerBound ? ratio : undefined,
+    };
+  }
+}
-- 
2.39.1.windows.1

